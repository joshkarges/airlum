"use strict";(self.webpackChunkairlum=self.webpackChunkairlum||[]).push([[294],{7294:(t,o,e)=>{var i=e(618),r=e.n(i),c=e(1408);let n=function(t){return t.White="white",t.Blue="blue",t.Green="green",t.Red="red",t.Black="black",t.Yellow="yellow",t}({});const s=function(t,o,e,i,r){return{white:t,blue:o,green:e,red:i,black:r,yellow:arguments.length>5&&void 0!==arguments[5]?arguments[5]:0}},l=s(0,0,0,0,0,0),d=[{id:0,color:n.White,cost:s(0,1,1,1,1),points:0,tier:"tier1"},{id:1,color:n.White,cost:s(0,1,2,1,1),points:0,tier:"tier1"},{id:2,color:n.White,cost:s(0,2,2,0,1),points:0,tier:"tier1"},{id:3,color:n.White,cost:s(3,1,0,0,1),points:0,tier:"tier1"},{id:4,color:n.White,cost:s(0,0,0,2,1),points:0,tier:"tier1"},{id:5,color:n.White,cost:s(0,2,0,0,2),points:0,tier:"tier1"},{id:6,color:n.White,cost:s(0,3,0,0,0),points:0,tier:"tier1"},{id:7,color:n.White,cost:s(0,0,4,0,0),points:1,tier:"tier1"},{id:8,color:n.Black,cost:s(1,1,1,1,0),points:0,tier:"tier1"},{id:9,color:n.Black,cost:s(1,2,1,1,0),points:0,tier:"tier1"},{id:10,color:n.Black,cost:s(2,2,0,1,0),points:0,tier:"tier1"},{id:11,color:n.Black,cost:s(0,0,1,3,1),points:0,tier:"tier1"},{id:12,color:n.Black,cost:s(0,0,2,1,0),points:0,tier:"tier1"},{id:13,color:n.Black,cost:s(2,0,2,0,0),points:0,tier:"tier1"},{id:14,color:n.Black,cost:s(0,0,3,0,0),points:0,tier:"tier1"},{id:15,color:n.Black,cost:s(0,4,0,0,0),points:1,tier:"tier1"},{id:16,color:n.Blue,cost:s(1,0,1,1,1),points:0,tier:"tier1"},{id:17,color:n.Blue,cost:s(1,0,1,2,1),points:0,tier:"tier1"},{id:18,color:n.Blue,cost:s(1,0,2,2,0),points:0,tier:"tier1"},{id:19,color:n.Blue,cost:s(0,1,3,1,0),points:0,tier:"tier1"},{id:20,color:n.Blue,cost:s(1,0,0,0,2),points:0,tier:"tier1"},{id:21,color:n.Blue,cost:s(0,0,2,0,2),points:0,tier:"tier1"},{id:22,color:n.Blue,cost:s(0,0,0,0,3),points:0,tier:"tier1"},{id:23,color:n.Blue,cost:s(0,0,0,4,0),points:1,tier:"tier1"},{id:24,color:n.Green,cost:s(1,1,0,1,1),points:0,tier:"tier1"},{id:25,color:n.Green,cost:s(1,1,0,1,2),points:0,tier:"tier1"},{id:26,color:n.Green,cost:s(0,1,0,2,2),points:0,tier:"tier1"},{id:27,color:n.Green,cost:s(1,3,1,0,0),points:0,tier:"tier1"},{id:28,color:n.Green,cost:s(2,1,0,0,0),points:0,tier:"tier1"},{id:29,color:n.Green,cost:s(0,2,0,2,0),points:0,tier:"tier1"},{id:30,color:n.Green,cost:s(0,0,0,3,0),points:0,tier:"tier1"},{id:31,color:n.Green,cost:s(0,0,0,0,4),points:1,tier:"tier1"},{id:32,color:n.Red,cost:s(1,1,1,0,1),points:0,tier:"tier1"},{id:33,color:n.Red,cost:s(2,1,1,0,1),points:0,tier:"tier1"},{id:34,color:n.Red,cost:s(2,0,1,0,2),points:0,tier:"tier1"},{id:35,color:n.Red,cost:s(1,0,0,1,3),points:0,tier:"tier1"},{id:36,color:n.Red,cost:s(0,2,1,0,0),points:0,tier:"tier1"},{id:37,color:n.Red,cost:s(2,0,0,2,0),points:0,tier:"tier1"},{id:38,color:n.Red,cost:s(3,0,0,0,0),points:0,tier:"tier1"},{id:39,color:n.Red,cost:s(4,0,0,0,0),points:1,tier:"tier1"},{id:40,color:n.Black,cost:s(3,2,2,0,0),points:1,tier:"tier2"},{id:41,color:n.Black,cost:s(3,0,3,0,2),points:1,tier:"tier2"},{id:42,color:n.Black,cost:s(0,1,4,2,0),points:2,tier:"tier2"},{id:43,color:n.Black,cost:s(0,0,5,3,0),points:2,tier:"tier2"},{id:44,color:n.Black,cost:s(5,0,0,0,0),points:2,tier:"tier2"},{id:45,color:n.Black,cost:s(0,0,0,0,6),points:3,tier:"tier2"},{id:46,color:n.Blue,cost:s(0,2,2,3,0),points:1,tier:"tier2"},{id:47,color:n.Blue,cost:s(0,2,3,0,3),points:1,tier:"tier2"},{id:48,color:n.Blue,cost:s(5,3,0,0,0),points:2,tier:"tier2"},{id:49,color:n.Blue,cost:s(2,0,0,1,4),points:2,tier:"tier2"},{id:50,color:n.Blue,cost:s(0,5,0,0,0),points:2,tier:"tier2"},{id:51,color:n.Blue,cost:s(0,6,0,0,0),points:3,tier:"tier2"},{id:52,color:n.White,cost:s(0,0,3,2,2),points:1,tier:"tier2"},{id:53,color:n.White,cost:s(2,3,0,3,0),points:1,tier:"tier2"},{id:54,color:n.White,cost:s(0,0,1,4,2),points:2,tier:"tier2"},{id:55,color:n.White,cost:s(0,0,0,5,3),points:2,tier:"tier2"},{id:56,color:n.White,cost:s(0,0,0,5,0),points:2,tier:"tier2"},{id:57,color:n.White,cost:s(6,0,0,0,0),points:3,tier:"tier2"},{id:58,color:n.Green,cost:s(3,0,2,3,0),points:1,tier:"tier2"},{id:59,color:n.Green,cost:s(2,3,0,0,2),points:1,tier:"tier2"},{id:60,color:n.Green,cost:s(4,2,0,0,1),points:2,tier:"tier2"},{id:61,color:n.Green,cost:s(0,5,3,0,0),points:2,tier:"tier2"},{id:62,color:n.Green,cost:s(0,0,5,0,0),points:2,tier:"tier2"},{id:63,color:n.Green,cost:s(0,0,6,0,0),points:3,tier:"tier2"},{id:64,color:n.Red,cost:s(2,0,0,2,3),points:1,tier:"tier2"},{id:65,color:n.Red,cost:s(0,3,0,2,3),points:1,tier:"tier2"},{id:66,color:n.Red,cost:s(1,4,2,0,0),points:2,tier:"tier2"},{id:67,color:n.Red,cost:s(3,0,0,0,5),points:2,tier:"tier2"},{id:68,color:n.Red,cost:s(0,0,0,0,5),points:2,tier:"tier2"},{id:69,color:n.Red,cost:s(0,0,0,6,0),points:3,tier:"tier2"},{id:70,color:n.Black,cost:s(3,3,5,3,0),points:3,tier:"tier3"},{id:71,color:n.Black,cost:s(0,0,0,7,0),points:4,tier:"tier3"},{id:72,color:n.Black,cost:s(0,0,3,6,3),points:4,tier:"tier3"},{id:73,color:n.Black,cost:s(0,0,0,7,3),points:5,tier:"tier3"},{id:74,color:n.Blue,cost:s(3,0,3,3,5),points:3,tier:"tier3"},{id:75,color:n.Blue,cost:s(7,0,0,0,0),points:4,tier:"tier3"},{id:76,color:n.Blue,cost:s(6,3,0,0,3),points:4,tier:"tier3"},{id:77,color:n.Blue,cost:s(7,3,0,0,0),points:5,tier:"tier3"},{id:78,color:n.White,cost:s(0,3,3,5,3),points:3,tier:"tier3"},{id:79,color:n.White,cost:s(0,0,0,0,7),points:4,tier:"tier3"},{id:80,color:n.White,cost:s(3,0,0,3,6),points:4,tier:"tier3"},{id:81,color:n.White,cost:s(3,0,0,0,7),points:5,tier:"tier3"},{id:82,color:n.Green,cost:s(5,3,0,3,3),points:3,tier:"tier3"},{id:83,color:n.Green,cost:s(0,7,0,0,0),points:4,tier:"tier3"},{id:84,color:n.Green,cost:s(3,6,3,0,0),points:4,tier:"tier3"},{id:85,color:n.Green,cost:s(0,7,3,0,0),points:5,tier:"tier3"},{id:86,color:n.Red,cost:s(3,5,3,0,3),points:3,tier:"tier3"},{id:87,color:n.Red,cost:s(0,0,7,0,0),points:4,tier:"tier3"},{id:88,color:n.Red,cost:s(0,3,6,3,0),points:4,tier:"tier3"},{id:89,color:n.Red,cost:s(0,0,7,3,0),points:5,tier:"tier3"}],p=(r().groupBy(d,"tier"),s(0,3,3,3,0),s(3,3,0,0,3),s(4,0,0,0,4),s(4,4,0,0,0),s(0,4,4,0,0),s(3,3,3,0,0),s(3,0,0,3,3),s(0,0,3,3,3),s(0,0,0,4,4),s(0,0,4,4,0),(t,o)=>r().reduce(t,((t,e,i,r)=>o(e,i,r)?t+1:t),0)),u=function(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t=>t;const e=[],i=[];return{start(){i.push(e.length)},get(){const r=i[i.length-1];return r>e.length?(console.error("Pool error: get ".concat(r," / ").concat(e.length)),t(...arguments)):(r===e.length&&e.push(t(...arguments)),i[i.length-1]++,o(e[r]))},end(){i.pop()}}},a=u((()=>[]),(t=>(t.length=0,t))),h=(u((()=>({}))),u((function(){return{type:arguments.length>0&&void 0!==arguments[0]?arguments[0]:"takeCoins",coinCost:arguments.length>1&&void 0!==arguments[1]?arguments[1]:{...l},card:arguments.length>2&&void 0!==arguments[2]?arguments[2]:null}}))),g=(u((()=>({...l}))),function(t,o){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];const i=t=>i=>{const c=h.get(),s=function(t,o){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return r().forEach(o.cost,((o,i)=>{e[i]=Math.max(0,o-p(t.bought,(t=>t.color===i)))})),r().every(e,((o,i)=>{if(t.coins[i]>=o)return!0;const r=o-t.coins[i];return t.coins[n.Yellow]-e[n.Yellow]>=r&&(e[i]=t.coins[i],e[n.Yellow]+=r,!0)}))?e:null}(o,i,c.coinCost);s&&(c.type=t,c.card=i,e.push(c))};return t.table.forEach(i("buy")),o.reserved.forEach(i("buyReserve")),e}),f=function(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];a.start();const e=G(t),i=t.players[e],c=r().reduce(t.coins,((t,o,e)=>t+(o>0&&e!==n.Yellow?1:0)),0)<3,s=a.get();if(c){const o=r().reduce(t.coins,((t,o,e)=>(o>0&&e!==n.Yellow&&t.push(e),t)),a.get());o.length&&s.push(o)}else!function(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];const e=i=>{if(3===i.length)return o.push(i),o;r().forEach(t,((t,o)=>{if(o!==i[0]&&o!==i[1]&&t>0&&o!==n.Yellow){const t=a.get();t.push(...i,o),e(t)}}))};e(a.get())}(t.coins,s);return s.forEach((t=>{const e=h.get("takeCoins");e.card=null,t.forEach((t=>{e.coinCost[t]=-1})),o.push(e)})),r().forEach(t.coins,((t,e)=>{if(t>=4&&e!==n.Yellow){const t=h.get("takeCoins");t.card=null,t.coinCost[e]=-2,o.push(t)}})),g(t,i,o),function(t,o){let e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];if(o.reserved.length<3){const o=t.coins[n.Yellow]>0?-1:0;t.table.forEach((t=>{const i=h.get();i.type="reserve",i.coinCost[n.Yellow]=o,i.card=t,e.push(i)}))}}(t,i,o),a.end(),o},B=(t,o)=>{h.start();const e=f(t).some(o);return h.end(),e},v=(t,o,e)=>{const i=e?r().findIndex(t.table,(t=>t.id===e.id)):t.table.length,c=t.deck[o].pop()||(t=>({id:-1,color:n.White,cost:s(0,0,0,0,0),points:0,tier:t}))(o);t.table.splice(i,e?1:0,c)},b=(t,o)=>v(t,o.tier,o),k=(t,o)=>{const e=((t,o)=>t.nobles.filter((t=>r().every(t.cards,((t,e)=>p(o.bought,(t=>t.color===e))>=t)))))(t,o)[0];e&&(r().remove(t.nobles,e),o.nobles.push(e),o.points+=e.points)},R=(0,c.ZP)(((t,o)=>{const e=t.turn%t.players.length,i=t.players[e];switch(((t,o,e)=>{r().assignWith(o.coins,e.coinCost,((t,o)=>t-o)),r().assignWith(t.coins,e.coinCost,((t,o)=>t+o))})(t,i,o),t.turn++,o.type){case"buy":i.points+=o.card.points,i.bought.push(o.card),b(t,o.card),k(t,i);break;case"buyReserve":i.points+=o.card.points,i.bought.push(o.card),r().remove(i.reserved,(t=>t.id===o.card.id)),k(t,i);break;case"reserve":i.reserved.push(o.card),b(t,o.card)}return t})),W=(t,o)=>+[o.points,o.bought.length,g(t,o).length,Math.min(10,r().reduce(o.coins,((t,o)=>t+o),0))].map((t=>t.toString().padStart(2,"0"))).join(""),y=t=>{a.start();const o=a.get();t.players.forEach((e=>o.push(W(t,e))));const[e,i]=o.sort(((t,o)=>o-t)),r=o.indexOf(e);return o.forEach(((t,c)=>{o[c]=t-(c===r?i:e)})),a.end(),o},G=t=>t.turn%t.players.length,m=t=>(t=>r().some(t.players,(t=>t.points>=15)))(t)&&0===G(t),w=t=>{h.start();const o=f(t),e=o[Math.floor(Math.random()*o.length)]||null;return h.end(),r().cloneDeep(e)},C=((t,o,e,i,r)=>{const c=function(n){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r,d=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1/0,p=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1/0,u=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];if(0===l||i(n)){const t=n.turn;n.turn=t-(r-l);const o=e(n);return n.turn=t,[o,s]}let a=u?-1/0:1/0;return t(n,u?t=>{const[e]=c(o(n,t),t,l-1,d,p,!1);return e>a&&(a=e,s=t),a>=p||(d=Math.max(d,a),!1)}:t=>{const[e]=c(o(n,t),t,l-1,d,p,!0);return e<a&&(a=e,s=t),a<=d||(p=Math.min(p,a),!1)}),[a,s]};return function(t){return c(t,null,arguments.length>1&&void 0!==arguments[1]?arguments[1]:r)[1]}})(B,R,(t=>{const o=G(t);return W(t,t.players[o])-t.players.reduce(((e,i,r)=>r===o?e:Math.max(e,W(t,i))),-1/0)}),m,2),M=((t,o,e,i,r,c)=>{const n=function(s){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c;if(0===d||r(s))return[e(s),l];const p=i(s);let u=[];return t(s,(t=>{const[e]=n(o(s,t),t,d-1);(!u.length||e[p]>u[p])&&(u=e,l=t)})),[u,l]};return function(t){return n(t,null,arguments.length>1&&void 0!==arguments[1]?arguments[1]:c)[1]}})(B,R,y,G,m,4),E=((t,o,e,i,r,c)=>{const n=function(s){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:c;if(0===p||r(s))return[e(s)[d],l];const u=i(s),a=[],h=[];let g=-1/0;t(s,(t=>{const i=o(s,t),r=e(i),[c]=n(i,t,d,p-1);c>g&&(g=c,l=t),a.push(c),h.push(r[u])}));const f=h.reduce(((t,o)=>t+o),0);return[a.reduce(((t,o,e)=>t+h[e]*o/f),0),l]};return function(t){let o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:c;const e=i(t);return n(t,null,e,o)[1]}})(B,R,y,G,m,4);let Y=function(t){return t[t.Random=0]="Random",t[t.AlphaBeta=1]="AlphaBeta",t[t.MaxN=2]="MaxN",t[t.Probablistic=3]="Probablistic",t}({});const x=t=>{switch(t){case Y.Random:return w;case Y.MaxN:return M;case Y.Probablistic:return E;case Y.AlphaBeta:default:return C}},P=x(Y.Probablistic);self.onmessage=t=>{self.postMessage({action:P(t.data.game,t.data.depth),depth:t.data.depth})}}}]);
//# sourceMappingURL=294.2587550e.chunk.js.map